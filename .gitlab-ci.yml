# SETTINGS ############################################################################################################
include:
  - project: 3dverse/platform/ci-utils/gitlab-templates
    file:
      - /ci/.bases/_index.yaml
      - /ci/.bases/regcreds.yaml
      - /ci/.bases/node/_index.yaml

variables:
  NODE_VERSION: "22"

# RULES     ###########################################################################################################
.manual-doc-publish-rule: &manual-doc-publish-rule $CI_DEFAULT_BRANCH == $CI_DEFAULT_BRANCH && $GENERATE_DOCS == "true"

.release-rule: &release-rule $CI_COMMIT_BRANCH == "release"

.default-branch-rule: &default-branch-rule $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.merge-request-on-release-rule: &merge-request-on-release-rule $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "release"

# TEMPLATES ###########################################################################################################
.docs:
  stage: deploy
  extends:
    - .env-dev
    - .runner-onprem
  image: node:${NODE_VERSION}
  before_script:
    - !reference [.npm-regcreds, before_script]
    - cd $PACKAGE_DIR
    - !reference [.node-cache, before_script]
  script:
    - npm run typedoc:md
    - tar -zcvf docs-md.tgz -C docs-md/ .
    - |
      echo "Publishing $PACKAGE_DIR docs"

      echo "Package latest"
      curl \
          --location --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
          --upload-file docs-md.tgz \
          "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_DIR}/latest/docs-md.tgz"

      if [ -n "$CI_COMMIT_TAG" ]; then
          echo "Package $CI_COMMIT_TAG"
          curl \
              --location --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
              --upload-file docs-md.tgz \
              "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_DIR}/${CI_COMMIT_TAG}/docs-md.tgz"
      fi

# JOBS ################################################################################################################
# BUILD
js:build:
  stage: build
  extends:
    - .env-dev
    - .runner-onprem
  image: node:${NODE_VERSION}
  artifacts:
    expire_in: 1 day
    paths:
      - "*/_prebuild/"
      - "*/dist/"
  before_script:
    - !reference [.npm-regcreds, before_script]
    - !reference [.node-cache, before_script]
  script:
    - npm run build:js
    - npm run build:react
    - npm run build:react.ui
    - npm run build:three
    - npm run build:samples
  rules:
    - if: *default-branch-rule
    - if: *merge-request-on-release-rule
    - if: *release-rule

create-mr:
  stage: deploy
  extends:
    - .env-dev
    - .runner-onprem
  image: node:${NODE_VERSION}-alpine
  script:
    - npx tsx .ci/create-mr.mts
  rules:
    - if: *default-branch-rule

pages:
  stage: deploy
  extends:
    - .env-dev
    - .runner-onprem
  needs:
    - job: js:build
      artifacts: true
  artifacts:
    paths:
      - public/
  before_script:
    - mkdir public
  script:
    - cp -r livelink.samples/dist/* public/
  rules:
    - if: *default-branch-rule

# VERSION #############################################################################################################
version:update-mr:
  stage: deploy
  extends:
    - .runner-onprem
  image: registry.gitlab.com/3dverse/platform/ci-utils/docker-images/changesets-tools:latest
  script:
    - changesets-tools generate-changesets
    - changesets-tools post-merge-request-details
  rules:
    - if: *merge-request-on-release-rule

version:generate-changesets:
  stage: deploy
  extends:
    - .runner-onprem
  image: registry.gitlab.com/3dverse/platform/ci-utils/docker-images/changesets-tools:latest
  artifacts:
    paths:
      - .changeset/*.md
  script:
    - changesets-tools generate-changesets
  rules:
    - if: *release-rule

version:publish:
  stage: deploy
  extends:
    - .runner-onprem
  image: node:${NODE_VERSION}-alpine
  needs:
    - job: js:build
      artifacts: true
    - job: version:generate-changesets
      artifacts: true
  artifacts:
    expire_in: 1 day
    paths:
      - "*/package.json"
  before_script:
    - !reference [.npm-regcreds, before_script]
    - !reference [.node-cache, before_script]
    - apk add --no-cache git
    - |
      git config --global user.name "${BOT_3DVERSE_USER_NAME}"
      git config --global user.email "${BOT_3DVERSE_USER_EMAIL}"
      git checkout -b $CI_COMMIT_REF_NAME || git checkout $CI_COMMIT_REF_NAME
      git remote set-url origin "https://${BOT_3DVERSE_USER_USERNAME}:${BOT_3DVERSE_GITLAB_API_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
    - |
      npm config set @3dverse:registry="https://registry.npmjs.org" --userconfig=".npmrc"
      npm config set //registry.npmjs.org/:_authToken="${NPMJS_ACCESS_TOKEN}" --userconfig=".npmrc"
  script:
    # Update package versions using changesets, and create a new commit
    - npx @changesets/cli version
    # Update package-lock.json
    - npm i --package-lock-only
    # Amend the commit to include the package-lock.json changes
    - git add package-lock.json
    - git commit --amend --no-edit
    # Tag the commit with the new version
    - npx @changesets/cli tag
    # Push the commit and tag
    - git push origin $CI_COMMIT_REF_NAME --follow-tags || git push --set-upstream origin $CI_COMMIT_REF_NAME --follow-tags
    # Publish the packages
    - npx @changesets/cli publish
    # Merge the release branch into the default branch
    - git fetch origin main
    - git checkout -b $CI_DEFAULT_BRANCH origin/$CI_DEFAULT_BRANCH
    - git merge --no-ff $CI_COMMIT_REF_NAME
    - git push origin $CI_DEFAULT_BRANCH
  variables:
    GIT_STRATEGY: clone
  rules:
    - if: *release-rule

# DOCS    #############################################################################################################
js:livelink.js:docs:
  stage: deploy
  extends:
    - .docs
  needs:
    - job: js:build
      artifacts: true
    - job: version:publish
      artifacts: true
      optional: true
  variables:
    PACKAGE_DIR: livelink.js
  rules:
    - if: *release-rule
    - if: *manual-doc-publish-rule

js:livelink.react:docs:
  stage: deploy
  extends:
    - .docs
  needs:
    - job: js:build
      artifacts: true
    - job: version:publish
      artifacts: true
      optional: true
  variables:
    PACKAGE_DIR: livelink.react
  rules:
    - if: *release-rule
    - if: *manual-doc-publish-rule

js:livelink.js:docs-trigger:
  stage: deploy
  needs:
    - job: js:livelink.js:docs
      artifacts: false
    - job: js:livelink.react:docs
      artifacts: false
      optional: true

  variables:
    # These variables will be used in the triggered downstream pipeline to download the generated docs artifacts.
    LIVELINK_PACKAGE_NAMES: livelink.js livelink.react
    LIVELINK_PACKAGE_ROOT: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/
    LIVELINK_PACKAGE_PATH: /latest/docs-md.tgz
    SYNC_LIVELINK_JS: "true"
  rules:
    - if: *release-rule
    - if: *manual-doc-publish-rule
  trigger:
    project: 3dverse/corp/3dverse-docs
    strategy: depend
